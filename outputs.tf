output "cluster_endpoint" {
  description = "Endpoint for EKS control plane."
  value       = module.eks.cluster_endpoint
}

output "cluster_security_group_id" {
  description = "Security group ids attached to the cluster control plane."
  value       = module.eks.cluster_security_group_id
}

output "kubectl_config" {
  description = "kubectl config as generated by the module."
  value       = module.eks.kubeconfig
}

output "config_map_aws_auth" {
  description = "A kubernetes configuration to authenticate to this EKS cluster."
  value       = module.eks.config_map_aws_auth
}

output "node_groups" {
  description = "Outputs from node groups"
  value       = module.eks.node_groups
}

output "arn" {
    value = aws_elasticsearch_domain.elastic_logs_domain.arn
} 
output "domain_id" {
    value = aws_elasticsearch_domain.elastic_logs_domain.domain_id
} 
output "domain_name" {
    value = aws_elasticsearch_domain.elastic_logs_domain.domain_name
} 
output "endpoint" {
    value = aws_elasticsearch_domain.elastic_logs_domain.endpoint
} 
output "kibana_endpoint" {
    value = aws_elasticsearch_domain.elastic_logs_domain.kibana_endpoint
}

locals {
  lb_name = split("-", split(".", kubernetes_service.example.status.0.load_balancer.0.ingress.0.hostname).0).0
}

output "load_balancer_name" {
  value = local.lb_name
}

output "load_balancer_hostname" {
  value = kubernetes_service.example.status.0.load_balancer.0.ingress.0.hostname
}

output "load_balancer_info" {
  value = data.aws_elb.example
}